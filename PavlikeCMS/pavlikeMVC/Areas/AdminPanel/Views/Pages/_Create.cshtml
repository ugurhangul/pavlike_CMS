@using PavlikeDATA.Repos
@model PavlikeDATA.Models.Page

<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "pageForm", @class = "js-validation-material form-horizontal push-10-t push-10" }))
{

    @Html.AntiForgeryToken()

    if (Request.RawUrl.ToLower().Contains("edit"))
    {
        @Html.HiddenFor(model => model.Active)
        @Html.HiddenFor(model => model.AuthorId)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.RootPage)

    }

    @Html.ValidationSummary(true, "", new { @class = "help-block text-right text-danger" })


    <div class="form-group">
        <div class="col-xs-12">
            <div class="form-material">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Sayfa Adı" } })
                @Html.LabelFor(model => model.Title)
                @Html.ValidationMessageFor(m => m.Title, null, new { @class = "help-block text-right help-block text-right text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-12">
            <div class="form-material">
                <div class="input-group">
                    <span class="input-group-addon">@(new SettingRepository().GetSettings().Url)/</span>
                    @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control", @placeholder = "Sayfa Adı" } })
                </div>

                @Html.LabelFor(model => model.Url)
                @Html.ValidationMessageFor(m => m.Url, null, new { @class = "help-block text-right text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-12">
            <div class="form-material">
                @Html.DropDownListFor(model => model.RootPage, null, "Seçiniz", new { @class = "form-control", @placeholder = "Üst Sayfa Adı",@value="0" } )
                @Html.LabelFor(model => model.RootPage)
                @Html.ValidationMessageFor(m => m.RootPage, null, new { @class = "help-block text-right text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-12">
            <div class="form-material">
                @Html.DropDownListFor(model => model.ViewId, new SelectList(new ThemeOptionsRepository().GetViews(),"Id","ViewName",Model.ViewId),  new { @class = "form-control", @placeholder = "Sayfa Taslağı"})
                @Html.LabelFor(model => model.RootPage)
                @Html.ValidationMessageFor(m => m.RootPage, null, new { @class = "help-block text-right text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-12">
            <div class="form-material">
                @Html.EditorFor(model => model.PageOrder, new { htmlAttributes = new { @class = "form-control", @placeholder = "Sayfa Sıra Numarası" } })
                @Html.LabelFor(model => model.PageOrder)
                @Html.ValidationMessageFor(m => m.PageOrder, null, new { @class = "help-block text-right text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-12">
            <div class="form-material">
                @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control", @placeholder = "Yayında mı ?" } })
                @Html.LabelFor(model => model.Published)
                @Html.ValidationMessageFor(m => m.Published, null, new { @class = "help-block text-right text-danger" })
            </div>
        </div>
    </div>


}


<script>
    $("#Title").on("change", function () {
        var charMap = { Ç: 'c', Ö: 'o', Ş: 's', İ: 'i', I: 'i', Ü: 'u', Ğ: 'g', ç: 'c', ö: 'o', ş: 's', ı: 'i', ü: 'u', ğ: 'g' };
        var str = $(this).val();
        var strArray = str.split('');
        for (var i = 0, len = strArray.length; i < len; i++) {
            strArray[i] = charMap[strArray[i]] || strArray[i];
        }
        str = strArray.join('');
        var clearStr = str.replace(" ", "-").replace("--", "-").replace(/[^a-z0-9-.çöşüğı]/gi, "").toLowerCase();
        $("#Url").val(clearStr);
        });

</script>
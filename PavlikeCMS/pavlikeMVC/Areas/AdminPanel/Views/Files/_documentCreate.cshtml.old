@model PavlikeDATA.Models.Document


<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@if (!Request.RawUrl.ToLower().Contains("edit"))
{
    <div class="form-group">
        <div class="col-xs-12">
            <div class="form-material">
                <div action="@Url.Action("_documentUpload")" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">

                    <div class="fallback">
                        <input name="file" type="file" multiple="" />
                    </div>
                </div>

                @Html.LabelFor(model => model.FileId)
                @Html.ValidationMessageFor(m => m.FileId, null, new { @class = "help-block text-right help-block text-right text-danger" })

            </div>
        </div>
    </div>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { @id = "documentForm", @class = "js-validation-material form-horizontal push-10-t push-10", enctype = "multipart/form-data" }))
{

    @Html.AntiForgeryToken()

    if (Request.RawUrl.ToLower().Contains("edit"))
    {
        @Html.HiddenFor(model => model.Active)
        @Html.HiddenFor(model => model.AuthorId)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Published)

    }

    @Html.HiddenFor(model => model.FileId)
    @Html.ValidationSummary(true, "", new { @class = "help-block text-right text-danger" })



    <div class="form-group">
        <div class="col-xs-12">
            <div class="form-material">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Belge Adı" } })
                @Html.LabelFor(model => model.Title)
                @Html.ValidationMessageFor(m => m.Title, null, new { @class = "help-block text-right help-block text-right text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-12">
            <div class="form-material">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Açıklama" } })
                @Html.LabelFor(model => model.Description)
                @Html.ValidationMessageFor(m => m.Description, null, new { @class = "help-block text-right text-danger" })
            </div>
        </div>
    </div>
}
<script>
    $(function () {
        $("div#dropzoneForm").dropzone({
            url: "@Url.Action("_documentUpload")",
            paramName: "file", // The name that will be used to transfer the file
            maxFiles: 1,
            init: function () {
                this.on("complete", function (data) {
                    if (data.xhr.response !== 0) {
                        $("#FileId").val(data.xhr.response);
                    }
                });
            }
        });
    })
</script>
